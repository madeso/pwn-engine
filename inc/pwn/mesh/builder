#ifndef PWN_MESH_BUILDER
#define PWN_MESH_BUILDER

#include <pwn/number>
#include <pwn/math/types>
#include <pwn/mesh/Triangle>

#include <boost/shared_ptr.hpp>

namespace pwn
{
	namespace mesh
	{
		class Mesh;
		class Material;

		void Move(Mesh* mesh, const math::vec3& dir);
		void SetCube(Mesh* mesh, boost::shared_ptr<Material> material, real width, real hight, real depth, bool faceOut);

		void AddQuad(Mesh* mesh, bool reverse, const pwn::uint32 material, const Triangle::Vertex& v0, const Triangle::Vertex& v1, const Triangle::Vertex& v2, const Triangle::Vertex& v3);
		void BuildNormals(Mesh* mesh);
		void InvertNormals(Mesh* mesh);
	}
}

#endif